---
title: "Between conditions Genesets analysis"
date: "{{TODAY}}"
output:
  html_document:
    toc: yes
    toc_depth: 3
  pdf_document:
    toc: yes
    toc_depth: '3'
params:
    scrna: 'scrna object'
    cluster: "clusters to analyse"
    cluster_info: "cluster info"
    project: "name/tag of the project"
    savedir: "directory where rds files were saved"
    funcs: "analysis steps to be performed"
    report_data_folder: "folder with the output tables"
    report_tables_folder: "folder with the table elements"
    report_plots_folder: "folder with the plot elements"
    report_plots_folder_png: "folder with the png plot elements"
    report_plots_folder_pdf: "folder with the pdf plot elements"
    author: "author of document"
author: '`r params$author`'
---

```{r Marker_genes, echo=FALSE, warning=FALSE, message=FALSE, results='hide' }
#use former data coz the DE analysis takes too much time.
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(gridExtra))
suppressPackageStartupMessages(library(cowplot))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(openxlsx))
suppressPackageStartupMessages(library(WriteXLS))
suppressPackageStartupMessages(library(stringr))
suppressPackageStartupMessages(library(digest))
suppressPackageStartupMessages(library(ggridges))
suppressPackageStartupMessages(library(plotly))
suppressPackageStartupMessages(library(Seurat))
suppressPackageStartupMessages(library(Hmisc))
suppressPackageStartupMessages(library(EnhancedVolcano))
suppressPackageStartupMessages(library(ComplexHeatmap))
suppressPackageStartupMessages(library(glue))
`%ni%` <- Negate(`%in%`)




cluster_use <- params$cluster
```

## Ridges plots

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide', fig.width=9, fig.height=7}

for(nm in scrna@tools$genesets){
  if(nm %ni% names(scrna@meta.data)){
    next
  }
  message("nm: ", nm, "   ", appendLF=F)
  print(str(scrna@meta.data[, nm]))
  df <- data.frame(
    nm = scrna@meta.data[, nm],
    Cluster = as.character(scrna@meta.data[, cluster_use]),
    stage = as.character(scrna@meta.data[, "stage"]),
    stringsAsFactors=F)


  df.s <- melt(df, id.vars = c("Cluster", "stage"))
  df.s[df.s == -Inf] <- 0

  min_x <- min(df.s$value)
  max_x <- max(df.s$value)
  print(str(df.s))
  col_def <- viridis::viridis_pal(option = "C")(length(unique(scrna@meta.data[, "stage"])))
  plt <- ggplot(df.s, aes(x=value, y=Cluster, color=stage, point_color=stage, fill=stage)) +
         geom_density_ridges(jittered_points=FALSE, scale = .95, rel_min_height = .01, alpha=0.5) +
         scale_y_discrete(expand = c(.01, 0)) +
         scale_fill_manual(values = col_def) +
         scale_color_manual(values = col_def, guide = "none") +
         scale_discrete_manual("point_color", values = col_def, guide = "none") +
         guides(fill = guide_legend(
           override.aes = list(
             fill = col_def,
             color = NA, point_color = NA))
         ) +
         theme_ridges(center = TRUE) +
         xlim(min_x, max_x) + ylab("") + ggtitle(glue("{nm}")) +
         theme(
           plot.title = element_text(hjust = 0.5),
           plot.subtitle = element_text(hjust = 0.5)
         )
  print(plt)
}

```




{% for tX, tY in lst_stage %}

## {{tX}} vs {{tY}}  Genesets Violin

```{r, echo=FALSE, message=FALSE, warning=FALSE, results='hide', fig.width=9, fig.height=7}

Idents(scrna) <- "stage"
for(nm in scrna@tools$genesets){
 plt <- VlnPlot(scrna, idents=c("{{tX}}", "{{tY}}"),
                pt.size=0, features=nm,
                cols = col_def,
                split.plot = TRUE,
                split.by = "stage",
                group.by=cluster_use)
 print(plt)

}
```
{% endfor %}
